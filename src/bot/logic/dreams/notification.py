import logging

import emoji
from aiogram import Bot
from aiogram.exceptions import TelegramForbiddenError
from sqlalchemy.ext.asyncio import AsyncSession

from src.bot.logic.dreams import current_record
from src.bot.structures.keyboards.menu import MENU_KEYBOARD
from src.configuration import conf
from src.db.database import create_async_engine, Database


async def get_bot():
    return Bot(token=conf.bot.token)


async def get_database():
    async with AsyncSession(bind=create_async_engine(url=conf.db.build_connection_str())) as session:
        return Database(session)


async def send_periodic_notification(user):
    bot = await get_bot()
    try:
        await bot.send_message(
            user.user_id,
            f"üåü *Wanty –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –≤–∞—Å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∂–µ–ª–∞–Ω–∏—è!* üåü\n\n"
            f"üëÄ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, —á—Ç–æ –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Ö–æ—Ç—è—Ç, –∏ –Ω–∞–π–¥–∏—Ç–µ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤.\n ",
            reply_markup=MENU_KEYBOARD,
            parse_mode="MARKDOWN"
        )
    except TelegramForbiddenError as e:
        logging.info(e, exc_info=False)
    except Exception as e:
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–±—â–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}", exc_info=True)


async def periodic_dream_notification():
    try:
        db = await get_database()
        users = await db.user.get_all_user_id()
        for user in users:
            await send_periodic_notification(user)
    except Exception as e:
        logging.error(e, exc_info=True)


async def clear_current_records():
    current_record.clear()
